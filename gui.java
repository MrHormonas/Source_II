/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trabalho_informaticaindustrial;

import java.awt.event.WindowEvent;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.table.DefaultTableModel;
import static trabalho_informaticaindustrial.OpState.FINISHED;
import static trabalho_informaticaindustrial.OpState.ONGOING;
import static trabalho_informaticaindustrial.OpState.PENDING;

/**
 *
 * @author Lu√≠s Melo <luismelo7@gmail.com>
 */
public class gui extends javax.swing.JFrame {
        
    public static DateFormat dateFormat = new SimpleDateFormat("hh:mm:ss dd MMM yyyy");

    /**
     * Creates new form gui
     */
    public gui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        TransformTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        AssembleTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        UnloadTable = new javax.swing.JTable();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        C1MaP6 = new javax.swing.JTextField();
        C1MaP1 = new javax.swing.JTextField();
        C1MaTime = new javax.swing.JTextField();
        jTextField53 = new javax.swing.JTextField();
        jTextField54 = new javax.swing.JTextField();
        C2MaP1 = new javax.swing.JTextField();
        C3MaP1 = new javax.swing.JTextField();
        C4MaP1 = new javax.swing.JTextField();
        C2MaP2 = new javax.swing.JTextField();
        C1MaP2 = new javax.swing.JTextField();
        C3MaP2 = new javax.swing.JTextField();
        C4MaP2 = new javax.swing.JTextField();
        C2MaP6 = new javax.swing.JTextField();
        C4MaP6 = new javax.swing.JTextField();
        C3MaP6 = new javax.swing.JTextField();
        C2MaTime = new javax.swing.JTextField();
        C3MaTime = new javax.swing.JTextField();
        C4MaTime = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        C2MbP5 = new javax.swing.JTextField();
        C2MbTime = new javax.swing.JTextField();
        jTextField34 = new javax.swing.JTextField();
        jTextField38 = new javax.swing.JTextField();
        C3MbP5 = new javax.swing.JTextField();
        C4MbP5 = new javax.swing.JTextField();
        C3MbP8 = new javax.swing.JTextField();
        C2MbP8 = new javax.swing.JTextField();
        C4MbP8 = new javax.swing.JTextField();
        C3MbTime = new javax.swing.JTextField();
        C4MbTime = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        C1McP8 = new javax.swing.JTextField();
        C1McP1 = new javax.swing.JTextField();
        C1McTime = new javax.swing.JTextField();
        jTextField27 = new javax.swing.JTextField();
        jTextField28 = new javax.swing.JTextField();
        C1McP3 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        textFieldPusher1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        textFieldPusher2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MES");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jTabbedPane1.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N

        TransformTable.setAutoCreateRowSorter(true);
        TransformTable.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        TransformTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Produced Packages", "On Going Packages", "Pending Packages", "Initial Package", "Final Package", "Check In Time", "Start Time", "Finish Time", "State"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TransformTable);
        TransformTable.getAccessibleContext().setAccessibleName("TransformTable");

        jTabbedPane1.addTab("Transformation List", jScrollPane1);

        AssembleTable.setAutoCreateRowSorter(true);
        AssembleTable.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        AssembleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Produced Packages", "On Going Packages", "Pending Packages", "Bottom Package", "Top Package", "Check In Time", "Start Time", "Finish Time", "State"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(AssembleTable);

        jTabbedPane1.addTab("Assembling List", jScrollPane2);

        UnloadTable.setAutoCreateRowSorter(true);
        UnloadTable.setFont(new java.awt.Font("Consolas", 0, 11)); // NOI18N
        UnloadTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Produced Packages", "On Going Packages", "Pending Packages", "Package", "Pusher Number", "Check In Time", "Start Time", "Finish Time", "State"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(UnloadTable);

        jTabbedPane1.addTab("Unload List", jScrollPane3);

        jLabel16.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel16.setText("Time (s)");

        jLabel17.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel17.setText("C1");
        jLabel17.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel17.setAlignmentY(0.0F);
        jLabel17.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel30.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel30.setText("# P1");

        jLabel31.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel31.setText("C3");

        jLabel32.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel32.setText("C4");

        jLabel33.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel33.setText("C2");

        jLabel34.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel34.setText("# P6");

        jLabel35.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel35.setText("# P2");

        C1MaP6.setEditable(false);
        C1MaP6.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C1MaP6.setText("0");
        C1MaP6.setAlignmentY(0.0F);
        C1MaP6.setMinimumSize(new java.awt.Dimension(78, 38));
        C1MaP6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C1MaP6ActionPerformed(evt);
            }
        });

        C1MaP1.setEditable(false);
        C1MaP1.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C1MaP1.setText("0");
        C1MaP1.setToolTipText("");
        C1MaP1.setAlignmentY(0.0F);
        C1MaP1.setFocusable(false);
        C1MaP1.setMinimumSize(new java.awt.Dimension(78, 38));
        C1MaP1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C1MaP1ActionPerformed(evt);
            }
        });

        C1MaTime.setEditable(false);
        C1MaTime.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C1MaTime.setText("0");
        C1MaTime.setAlignmentY(0.0F);
        C1MaTime.setMinimumSize(new java.awt.Dimension(78, 38));
        C1MaTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C1MaTimeActionPerformed(evt);
            }
        });

        jTextField53.setEditable(false);
        jTextField53.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jTextField53.setMinimumSize(new java.awt.Dimension(78, 38));
        jTextField53.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField53ActionPerformed(evt);
            }
        });

        jTextField54.setEditable(false);
        jTextField54.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jTextField54.setMinimumSize(new java.awt.Dimension(78, 38));
        jTextField54.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField54ActionPerformed(evt);
            }
        });

        C2MaP1.setEditable(false);
        C2MaP1.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C2MaP1.setText("0");
        C2MaP1.setMinimumSize(new java.awt.Dimension(78, 38));
        C2MaP1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C2MaP1ActionPerformed(evt);
            }
        });

        C3MaP1.setEditable(false);
        C3MaP1.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C3MaP1.setText("0");
        C3MaP1.setMinimumSize(new java.awt.Dimension(78, 38));
        C3MaP1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C3MaP1ActionPerformed(evt);
            }
        });

        C4MaP1.setEditable(false);
        C4MaP1.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C4MaP1.setText("0");
        C4MaP1.setMinimumSize(new java.awt.Dimension(78, 38));
        C4MaP1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C4MaP1ActionPerformed(evt);
            }
        });

        C2MaP2.setEditable(false);
        C2MaP2.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C2MaP2.setText("0");
        C2MaP2.setMinimumSize(new java.awt.Dimension(78, 38));
        C2MaP2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C2MaP2ActionPerformed(evt);
            }
        });

        C1MaP2.setEditable(false);
        C1MaP2.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C1MaP2.setText("0");
        C1MaP2.setAlignmentY(0.0F);
        C1MaP2.setMinimumSize(new java.awt.Dimension(78, 38));
        C1MaP2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C1MaP2ActionPerformed(evt);
            }
        });

        C3MaP2.setEditable(false);
        C3MaP2.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C3MaP2.setText("0");
        C3MaP2.setMinimumSize(new java.awt.Dimension(78, 38));
        C3MaP2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C3MaP2ActionPerformed(evt);
            }
        });

        C4MaP2.setEditable(false);
        C4MaP2.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C4MaP2.setText("0");
        C4MaP2.setMinimumSize(new java.awt.Dimension(78, 38));
        C4MaP2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C4MaP2ActionPerformed(evt);
            }
        });

        C2MaP6.setEditable(false);
        C2MaP6.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C2MaP6.setText("0");
        C2MaP6.setMinimumSize(new java.awt.Dimension(78, 38));
        C2MaP6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C2MaP6ActionPerformed(evt);
            }
        });

        C4MaP6.setEditable(false);
        C4MaP6.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C4MaP6.setText("0");
        C4MaP6.setMinimumSize(new java.awt.Dimension(78, 38));
        C4MaP6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C4MaP6ActionPerformed(evt);
            }
        });

        C3MaP6.setEditable(false);
        C3MaP6.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C3MaP6.setText("0");
        C3MaP6.setMinimumSize(new java.awt.Dimension(78, 38));
        C3MaP6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C3MaP6ActionPerformed(evt);
            }
        });

        C2MaTime.setEditable(false);
        C2MaTime.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C2MaTime.setText("0");
        C2MaTime.setMinimumSize(new java.awt.Dimension(78, 38));
        C2MaTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C2MaTimeActionPerformed(evt);
            }
        });

        C3MaTime.setEditable(false);
        C3MaTime.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C3MaTime.setText("0");
        C3MaTime.setMinimumSize(new java.awt.Dimension(78, 38));
        C3MaTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C3MaTimeActionPerformed(evt);
            }
        });

        C4MaTime.setEditable(false);
        C4MaTime.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C4MaTime.setText("0");
        C4MaTime.setMinimumSize(new java.awt.Dimension(78, 38));
        C4MaTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C4MaTimeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel30)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel35)
                        .addGap(41, 41, 41)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(C1MaP6, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel34))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(C1MaTime, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel33, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel32, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel31, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(C2MaP1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(C3MaP1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(C4MaP1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(39, 39, 39)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(C1MaP2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(C4MaP2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(C3MaP2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(C2MaP2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(36, 36, 36)
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel6Layout.createSequentialGroup()
                                                .addComponent(C2MaP6, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(C2MaTime, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel6Layout.createSequentialGroup()
                                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(C3MaP6, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(C4MaP6, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                                        .addComponent(C4MaTime, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(16, 16, 16)
                                                        .addComponent(jTextField53, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(C3MaTime, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                            .addComponent(C1MaP1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 751, Short.MAX_VALUE)
                .addComponent(jTextField54, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(C1MaP1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C1MaP6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel17)
                    .addComponent(C1MaTime, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C1MaP2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(C2MaP1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C2MaP2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C2MaP6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C2MaTime, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(C3MaP1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C3MaP2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C3MaP6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C3MaTime, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel32)
                        .addComponent(C4MaP1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(C4MaP2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(C4MaP6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(C4MaTime, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextField53, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField54, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6))
        );

        jTabbedPane3.addTab("Machine A", jPanel6);

        jLabel5.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel5.setText("Time (s)");

        jLabel15.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel15.setText("C2");
        jLabel15.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel15.setAlignmentY(0.0F);
        jLabel15.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel24.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel24.setText("# P5");

        jLabel25.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel25.setText("C4");

        jLabel27.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel27.setText("C3");

        jLabel29.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel29.setText("# P8");

        C2MbP5.setEditable(false);
        C2MbP5.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C2MbP5.setText("0");
        C2MbP5.setToolTipText("");
        C2MbP5.setAlignmentY(0.0F);
        C2MbP5.setFocusable(false);
        C2MbP5.setMinimumSize(new java.awt.Dimension(78, 38));
        C2MbP5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C2MbP5ActionPerformed(evt);
            }
        });

        C2MbTime.setEditable(false);
        C2MbTime.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C2MbTime.setText("0");
        C2MbTime.setAlignmentY(0.0F);
        C2MbTime.setMinimumSize(new java.awt.Dimension(78, 38));
        C2MbTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C2MbTimeActionPerformed(evt);
            }
        });

        jTextField34.setEditable(false);
        jTextField34.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jTextField34.setMinimumSize(new java.awt.Dimension(78, 38));
        jTextField34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField34ActionPerformed(evt);
            }
        });

        jTextField38.setEditable(false);
        jTextField38.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jTextField38.setMinimumSize(new java.awt.Dimension(78, 38));
        jTextField38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField38ActionPerformed(evt);
            }
        });

        C3MbP5.setEditable(false);
        C3MbP5.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C3MbP5.setText("0");
        C3MbP5.setMinimumSize(new java.awt.Dimension(78, 38));
        C3MbP5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C3MbP5ActionPerformed(evt);
            }
        });

        C4MbP5.setEditable(false);
        C4MbP5.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C4MbP5.setText("0");
        C4MbP5.setMinimumSize(new java.awt.Dimension(78, 38));
        C4MbP5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C4MbP5ActionPerformed(evt);
            }
        });

        C3MbP8.setEditable(false);
        C3MbP8.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C3MbP8.setText("0");
        C3MbP8.setMinimumSize(new java.awt.Dimension(78, 38));
        C3MbP8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C3MbP8ActionPerformed(evt);
            }
        });

        C2MbP8.setEditable(false);
        C2MbP8.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C2MbP8.setText("0");
        C2MbP8.setAlignmentY(0.0F);
        C2MbP8.setMinimumSize(new java.awt.Dimension(78, 38));
        C2MbP8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C2MbP8ActionPerformed(evt);
            }
        });

        C4MbP8.setEditable(false);
        C4MbP8.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C4MbP8.setText("0");
        C4MbP8.setMinimumSize(new java.awt.Dimension(78, 38));
        C4MbP8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C4MbP8ActionPerformed(evt);
            }
        });

        C3MbTime.setEditable(false);
        C3MbTime.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C3MbTime.setText("0");
        C3MbTime.setMinimumSize(new java.awt.Dimension(78, 38));
        C3MbTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C3MbTimeActionPerformed(evt);
            }
        });

        C4MbTime.setEditable(false);
        C4MbTime.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C4MbTime.setText("0");
        C4MbTime.setMinimumSize(new java.awt.Dimension(78, 38));
        C4MbTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C4MbTimeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel24)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel29))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(C3MbP5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(C4MbP5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(39, 39, 39)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(C2MbP8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(C4MbP8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(C3MbP8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addGap(205, 205, 205)
                                                .addComponent(jTextField34, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addGap(36, 36, 36)
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(C3MbTime, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(C4MbTime, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(C2MbTime, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                            .addComponent(C2MbP5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 751, Short.MAX_VALUE)
                .addComponent(jTextField38, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(C2MbP5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(C2MbTime, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C2MbP8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(C3MbP5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C3MbP8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C3MbTime, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(C4MbP5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C4MbP8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C4MbTime, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField34, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField38, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        jTabbedPane3.addTab("Machine B", jPanel5);

        jLabel2.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel2.setText("Time (s)");

        jLabel6.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel6.setText("C1");
        jLabel6.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel6.setAlignmentY(0.0F);
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel18.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel18.setText("# P1");

        jLabel22.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel22.setText("# P8");

        jLabel23.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel23.setText("# P3");

        C1McP8.setEditable(false);
        C1McP8.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C1McP8.setText("0");
        C1McP8.setAlignmentY(0.0F);
        C1McP8.setMinimumSize(new java.awt.Dimension(78, 38));
        C1McP8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C1McP8ActionPerformed(evt);
            }
        });

        C1McP1.setEditable(false);
        C1McP1.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C1McP1.setText("0");
        C1McP1.setToolTipText("");
        C1McP1.setAlignmentY(0.0F);
        C1McP1.setFocusable(false);
        C1McP1.setMinimumSize(new java.awt.Dimension(78, 38));
        C1McP1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C1McP1ActionPerformed(evt);
            }
        });

        C1McTime.setEditable(false);
        C1McTime.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C1McTime.setText("0");
        C1McTime.setAlignmentY(0.0F);
        C1McTime.setMinimumSize(new java.awt.Dimension(78, 38));
        C1McTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C1McTimeActionPerformed(evt);
            }
        });

        jTextField27.setEditable(false);
        jTextField27.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jTextField27.setMinimumSize(new java.awt.Dimension(78, 38));
        jTextField27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField27ActionPerformed(evt);
            }
        });

        jTextField28.setEditable(false);
        jTextField28.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jTextField28.setMinimumSize(new java.awt.Dimension(78, 38));
        jTextField28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField28ActionPerformed(evt);
            }
        });

        C1McP3.setEditable(false);
        C1McP3.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        C1McP3.setText("0");
        C1McP3.setAlignmentY(0.0F);
        C1McP3.setMinimumSize(new java.awt.Dimension(78, 38));
        C1McP3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C1McP3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel18)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel23)
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(C1McP8, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(C1McTime, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(C1McP3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(248, 248, 248)
                                        .addComponent(jTextField27, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(C1McP1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 751, Short.MAX_VALUE)
                .addComponent(jTextField28, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(C1McP1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C1McP8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(C1McTime, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C1McP3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField27, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField28, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );

        jTabbedPane3.addTab("Machine C", jPanel1);

        jLabel9.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel9.setText("Quantity");

        textFieldPusher1.setEditable(false);
        textFieldPusher1.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        textFieldPusher1.setText("0");
        textFieldPusher1.setMinimumSize(new java.awt.Dimension(78, 38));
        textFieldPusher1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldPusher1ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel10.setText("Pusher 2");

        jLabel11.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        jLabel11.setText("Pusher 1");

        textFieldPusher2.setEditable(false);
        textFieldPusher2.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        textFieldPusher2.setText("0");
        textFieldPusher2.setMinimumSize(new java.awt.Dimension(78, 38));
        textFieldPusher2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldPusher2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(textFieldPusher1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(textFieldPusher2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(984, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldPusher1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textFieldPusher2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        textFieldPusher1.getAccessibleContext().setAccessibleName("Pusher1Counter");
        textFieldPusher2.getAccessibleContext().setAccessibleName("Pusher2Counter");

        jTabbedPane3.addTab("Pushers", jPanel3);

        jTabbedPane1.addTab("Statistics", jTabbedPane3);

        jLabel1.setText("¬Æ David Sousa & Lu√≠s Melo");

        jLabel3.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Manufacturing Execution System");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1295, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setSize(new java.awt.Dimension(1311, 338));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void textFieldPusher2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldPusher2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldPusher2ActionPerformed

    private void textFieldPusher1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldPusher1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldPusher1ActionPerformed

    private void C4MbTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C4MbTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C4MbTimeActionPerformed

    private void C3MbTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C3MbTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C3MbTimeActionPerformed

    private void C4MbP8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C4MbP8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C4MbP8ActionPerformed

    private void C2MbP8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C2MbP8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C2MbP8ActionPerformed

    private void C3MbP8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C3MbP8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C3MbP8ActionPerformed

    private void C4MbP5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C4MbP5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C4MbP5ActionPerformed

    private void C3MbP5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C3MbP5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C3MbP5ActionPerformed

    private void jTextField38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField38ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField38ActionPerformed

    private void jTextField34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField34ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField34ActionPerformed

    private void C2MbTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C2MbTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C2MbTimeActionPerformed

    private void C2MbP5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C2MbP5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C2MbP5ActionPerformed

    private void C4MaTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C4MaTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C4MaTimeActionPerformed

    private void C3MaTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C3MaTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C3MaTimeActionPerformed

    private void C2MaTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C2MaTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C2MaTimeActionPerformed

    private void C3MaP6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C3MaP6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C3MaP6ActionPerformed

    private void C4MaP6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C4MaP6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C4MaP6ActionPerformed

    private void C2MaP6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C2MaP6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C2MaP6ActionPerformed

    private void C4MaP2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C4MaP2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C4MaP2ActionPerformed

    private void C3MaP2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C3MaP2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C3MaP2ActionPerformed

    private void C1MaP2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C1MaP2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C1MaP2ActionPerformed

    private void C2MaP2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C2MaP2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C2MaP2ActionPerformed

    private void C4MaP1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C4MaP1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C4MaP1ActionPerformed

    private void C3MaP1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C3MaP1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C3MaP1ActionPerformed

    private void C2MaP1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C2MaP1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C2MaP1ActionPerformed

    private void jTextField54ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField54ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField54ActionPerformed

    private void jTextField53ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField53ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField53ActionPerformed

    private void C1MaTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C1MaTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C1MaTimeActionPerformed

    private void C1MaP1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C1MaP1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C1MaP1ActionPerformed

    private void C1MaP6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C1MaP6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C1MaP6ActionPerformed

    private void C1McP3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C1McP3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C1McP3ActionPerformed

    private void jTextField28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField28ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField28ActionPerformed

    private void jTextField27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField27ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField27ActionPerformed

    private void C1McTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C1McTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C1McTimeActionPerformed

    private void C1McP1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C1McP1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C1McP1ActionPerformed

    private void C1McP8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C1McP8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C1McP8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AssembleTable;
    private javax.swing.JTextField C1MaP1;
    private javax.swing.JTextField C1MaP2;
    private javax.swing.JTextField C1MaP6;
    private javax.swing.JTextField C1MaTime;
    private javax.swing.JTextField C1McP1;
    private javax.swing.JTextField C1McP3;
    private javax.swing.JTextField C1McP8;
    private javax.swing.JTextField C1McTime;
    private javax.swing.JTextField C2MaP1;
    private javax.swing.JTextField C2MaP2;
    private javax.swing.JTextField C2MaP6;
    private javax.swing.JTextField C2MaTime;
    private javax.swing.JTextField C2MbP5;
    private javax.swing.JTextField C2MbP8;
    private javax.swing.JTextField C2MbTime;
    private javax.swing.JTextField C3MaP1;
    private javax.swing.JTextField C3MaP2;
    private javax.swing.JTextField C3MaP6;
    private javax.swing.JTextField C3MaTime;
    private javax.swing.JTextField C3MbP5;
    private javax.swing.JTextField C3MbP8;
    private javax.swing.JTextField C3MbTime;
    private javax.swing.JTextField C4MaP1;
    private javax.swing.JTextField C4MaP2;
    private javax.swing.JTextField C4MaP6;
    private javax.swing.JTextField C4MaTime;
    private javax.swing.JTextField C4MbP5;
    private javax.swing.JTextField C4MbP8;
    private javax.swing.JTextField C4MbTime;
    private javax.swing.JTable TransformTable;
    private javax.swing.JTable UnloadTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTextField jTextField27;
    private javax.swing.JTextField jTextField28;
    private javax.swing.JTextField jTextField34;
    private javax.swing.JTextField jTextField38;
    private javax.swing.JTextField jTextField53;
    private javax.swing.JTextField jTextField54;
    private javax.swing.JTextField textFieldPusher1;
    private javax.swing.JTextField textFieldPusher2;
    // End of variables declaration//GEN-END:variables
    
    
/**
 *  My Methods
 *  @author Lu√≠s Melo <luismelo7@gmail.com>
     * @param id
     * @param qt
     * @param initPkg
     * @param finalPkg
     * @param checkIn
     * @param StartTime
     * @param state
     * @param FinishTime
 */
    
    
    
    
    
    /*
                    UPDATE TRANSFORMATION TABLE
        rows:
            *0: id                  *1: produced pkg
            *2: ongoing pkg         *3: pending pkg
            *4: Pkg init            *5: Pkg final
            *6: check in time       *7: start time
            *8: finish time         *9: state
        */
    
    public void addNewTransformation(int id, int qt_produ, int initPkg, int finalPkg) 
    {
        DefaultTableModel model = (DefaultTableModel) TransformTable.getModel();
        model.addRow(new Object[]{id, 0, 0, qt_produ, "P" + initPkg, "P" + finalPkg, dateFormat.format(Calendar.getInstance().getTime()).toString(), null, null, PENDING});
    }
    
    public void oneTransformationGoing(int id) 
    {
        DefaultTableModel model = (DefaultTableModel) TransformTable.getModel();    
        int row = 0, col = 0;
        
        for(int i = 0; i < model.getRowCount(); i++)
        {
            if ( id == (int)model.getValueAt(i, 0))
            {
                row = i;
                break;
            }
        }
        
        // √© a 1 pe√ßa de todas; esta pending...ongoing = 0; produced = 0
        if (    (int) model.getValueAt(row, 1 ) == 0 && 
                (int) model.getValueAt(row, 2 ) == 0 &&
                model.getValueAt(row, model.getColumnCount()-1) == PENDING)  
        {
            model.setValueAt(ONGOING, row, model.getColumnCount()-1);
            model.setValueAt(dateFormat.format(Calendar.getInstance().getTime()).toString(), row, 7); //atualiza start time
        }
        
        model.setValueAt((int)model.getValueAt(row, 3)-1, row, 3);  //F5 nos pending packages (-1)
        model.setValueAt((int)model.getValueAt(row, 2)+1, row, 2);  //F5 nos ongoing packages (+1)
    }
    
    public void oneTransformationArrived(int id) 
    {
        DefaultTableModel model = (DefaultTableModel) TransformTable.getModel();    
        int row = 0, col = 0;
        
        for(int i = 0; i < model.getRowCount(); i++)
        {
            if ( id == (int)model.getValueAt(i, 0))
            {
                row = i;
                break;
            }
        }
        // √© a ultima pe√ßa de todas; esta ongoing...pending = 0 ongoing =1
        if (    (int) model.getValueAt(row, 3 ) == 0 && 
                (int) model.getValueAt(row, 2 ) == 1 &&
                model.getValueAt(row, model.getColumnCount()-1) == ONGOING)  
        {
            model.setValueAt(FINISHED, row, model.getColumnCount()-1); //diz que acabou
            model.setValueAt(dateFormat.format(Calendar.getInstance().getTime()).toString(), row, 8); //atualiza finish time time
        }
        
        model.setValueAt((int)model.getValueAt(row, 1)+1, row, 1);  //F5 nos produced packages (+1)
        model.setValueAt((int)model.getValueAt(row, 2)-1, row, 2);  //F5 nos ongoing packages (-1)
    }
    
    
    /*
                    UPDATE ASSEMBLE TABLE
        rows:
            *0: id                  *1: produced pkg
            *2: ongoing pkg         *3: pending pkg
            *4: Bottom Package      *5: Top Package
            *6: check in time       *7: start time
            *8: finish time         *9: state
        */
    
    public void addNewAssemble(int id, int qt_produ, int bottomPkg, int topPkg)
    {
        DefaultTableModel model = (DefaultTableModel) AssembleTable.getModel();
        model.addRow(new Object[]{id, 0, 0, qt_produ, "P" + bottomPkg, "P" + topPkg, dateFormat.format(Calendar.getInstance().getTime()).toString(), null, null, PENDING});
    }
    
    public void oneAssembleGoing(int id) 
    {
        DefaultTableModel model = (DefaultTableModel) AssembleTable.getModel();    
        int row = 0, col = 0;
        
        for(int i = 0; i < model.getRowCount(); i++)
        {
            if ( id == (int)model.getValueAt(i, 0))
            {
                row = i;
                break;
            }
        }
        
        // √© a 1 pe√ßa de todas; esta pending...ongoing = 0; produced = 0
        if (    (int) model.getValueAt(row, 1 ) == 0 && 
                (int) model.getValueAt(row, 2 ) == 0 &&
                model.getValueAt(row, model.getColumnCount()-1) == PENDING)  
        {
            model.setValueAt(ONGOING, row, model.getColumnCount()-1);
            model.setValueAt(dateFormat.format(Calendar.getInstance().getTime()).toString(), row, 7); //atualiza start time
        }
        
        model.setValueAt((int)model.getValueAt(row, 3)-1, row, 3);  //F5 nos pending packages (-1)
        model.setValueAt((int)model.getValueAt(row, 2)+1, row, 2);  //F5 nos ongoing packages (+1)
    }
    
    public void oneAssembleArrived(int id) 
    {
        DefaultTableModel model = (DefaultTableModel) AssembleTable.getModel();    
        int row = 0, col = 0;
        
        for(int i = 0; i < model.getRowCount(); i++)
        {
            if ( id == (int)model.getValueAt(i, 0))
            {
                row = i;
                break;
            }
        }
        
        // √© a ultima pe√ßa de todas; esta ongoing...pending = 0 ongoing =1
        if (    (int) model.getValueAt(row, 3 ) == 0 && 
                (int) model.getValueAt(row, 2 ) == 1 &&
                model.getValueAt(row, model.getColumnCount()-1) == ONGOING)  
        {
            model.setValueAt(FINISHED, row, model.getColumnCount()-1); //diz que acabou
            model.setValueAt(dateFormat.format(Calendar.getInstance().getTime()).toString(), row, 8); //atualiza finish time time
        }
        
        model.setValueAt((int)model.getValueAt(row, 1)+1, row, 1);  //F5 nos produced packages (+1)
        model.setValueAt((int)model.getValueAt(row, 2)-1, row, 2);  //F5 nos ongoing packages (-1)
    }
    
    /*
                    UPDATE UNLOAD TABLE
        rows:
            *0: id                  *1: produced pkg
            *2: ongoing pkg         *3: pending pkg
            *4: Pakage              *5: Pusher Number
            *6: check in time       *7: start time
            *8: finish time         *9: state
        */
    
    public void addNewUnload(int id, int qt_produ, int Pkg, int numPusher)
    {
        DefaultTableModel model = (DefaultTableModel) UnloadTable.getModel();
        model.addRow(new Object[]{id, 0, 0, qt_produ, "P" + Pkg, numPusher, dateFormat.format(Calendar.getInstance().getTime()).toString(), null, null, PENDING});
    }
    
    public void oneUnloadGoing(int id) 
    {
        DefaultTableModel model = (DefaultTableModel) UnloadTable.getModel();    
        int row = 0, col = 0;
        
        for(int i = 0; i < model.getRowCount(); i++)
        {
            if ( id == (int)model.getValueAt(i, 0))
            {
                row = i;
                break;
            }
        }
        
        // √© a 1 pe√ßa de todas; esta pending...ongoing = 0; produced = 0
        if (    (int) model.getValueAt(row, 1 ) == 0 && 
                (int) model.getValueAt(row, 2 ) == 0 &&
                model.getValueAt(row, model.getColumnCount()-1) == PENDING)  
        {
            model.setValueAt(ONGOING, row, model.getColumnCount()-1);
            model.setValueAt(dateFormat.format(Calendar.getInstance().getTime()).toString(), row, 7); //atualiza start time
        }
        
        model.setValueAt((int)model.getValueAt(row, 3)-1, row, 3);  //F5 nos pending packages (-1)
        model.setValueAt((int)model.getValueAt(row, 2)+1, row, 2);  //F5 nos ongoing packages (+1)
    }
    
    public void oneUnloadArrived(int id) 
    {
        DefaultTableModel model = (DefaultTableModel) UnloadTable.getModel();    
        int row = 0, col = 0;
        
        for(int i = 0; i < model.getRowCount(); i++)
        {
            if ( id == (int)model.getValueAt(i, 0))
            {
                row = i;
                break;
            }
        }
        
        addOneToPusher((int)model.getValueAt(row, 5 ));
        
        // √© a ultima pe√ßa de todas; esta ongoing...pending = 0 ongoing =1
        if (    (int) model.getValueAt(row, 3 ) == 0 && 
                (int) model.getValueAt(row, 2 ) == 1 &&
                model.getValueAt(row, model.getColumnCount()-1) == ONGOING)  
        {
            model.setValueAt(FINISHED, row, model.getColumnCount()-1); //diz que acabou
            model.setValueAt(dateFormat.format(Calendar.getInstance().getTime()).toString(), row, 8); //atualiza finish time time
        }
        
        model.setValueAt((int)model.getValueAt(row, 1)+1, row, 1);  //F5 nos produced packages (+1)
        model.setValueAt((int)model.getValueAt(row, 2)-1, row, 2);  //F5 nos ongoing packages (-1)
    }
    
    /*
    *   cell
    *
    */
    public void addOneToMachines(int cell, char machine, int pkg)
    {       
        machine = Character.toUpperCase(machine);
        int time, val;
 //       System.out.println("GuiStatistics--->cell:" + cell + "|machine:" + machine + "|package:" + pkg);
        if ( machine == 'A')
        {
            if ( cell == 1 )
            {
                time = Integer.valueOf(C1MaTime.getText());
                if ( pkg == 2 )
                {
                    val = Integer.valueOf(C1MaP2.getText()) + 1;
                    time += 20; 
                    C1MaP2.setText("" + val); C1MaTime.setText("" + time);         
                }
                else if ( pkg == 1 )
                {
                    val = Integer.valueOf(C1MaP1.getText()) + 1;
                    time += 25; 
                    C1MaP1.setText("" + val); C1MaTime.setText("" + time);         
                }
                else if ( pkg == 6 )
                {
                    val = Integer.valueOf(C1MaP6.getText()) + 1;
                    time += 25; 
                    C1MaP6.setText("" + val); C1MaTime.setText("" + time);         
                }
            }
            else if ( cell == 2 )
            {
                time = Integer.valueOf(C2MaTime.getText());
                if ( pkg == 1 )
                    {
                        val = Integer.valueOf(C2MaP1.getText()) + 1;
                        time += 25;
                        C2MaP1.setText("" + val); C2MaTime.setText("" + time); 
                    }
                else if ( pkg == 6 )
                {
                    val = Integer.valueOf(C2MaP6.getText()) + 1;
                    time += 25;
                    C2MaP6.setText("" + val); C2MaTime.setText("" + time);                                              
                }
            }
            
            else if ( cell ==  3 )
            {
                time = Integer.valueOf(C3MaTime.getText());
                if ( pkg == 1 )
                {
                        val = Integer.valueOf(C3MaP1.getText()) + 1;
                        time += 25;
                        C3MaP1.setText("" + val); C3MaTime.setText("" + time);
                }
                else if ( pkg == 6 )
                {
                        val = Integer.valueOf(C3MaP6.getText()) + 1;
                        time += 25;
                        C3MaP6.setText("" + val); C3MaTime.setText("" + time);                                               
                }
            }
            
            else if ( cell == 4 )
            {
                time = Integer.valueOf(C4MaTime.getText());
                if ( pkg == 1 )
                { 
                    val = Integer.valueOf(C4MaP1.getText()) + 1;
                    time += 25;
                    C4MaP1.setText("" + val); C4MaTime.setText("" + time);    
                }
                else if ( pkg == 6 )
                {
                    val = Integer.valueOf(C4MaP6.getText()) + 1;
                    time += 25;
                    C4MaP6.setText("" + val); C4MaTime.setText("" + time);                                               
                }
            }
        }   
        else if ( machine == 'B' )
        {
            if(cell ==2)
            {
                time = Integer.valueOf(C2MbTime.getText());
                if ( pkg == 5)
                { 
                    val = Integer.valueOf(C2MbP5.getText()) + 1;
                    time += 25;
                    C2MbP5.setText("" + val); C2MbTime.setText("" + time);         
                }
                else if ( pkg == 8 )
                {
                    val = Integer.valueOf(C2MbP8.getText()) + 1;
                    time += 20;
                    C2MbP8.setText("" + val); C2MbTime.setText("" + time);      
                }
            }
            else if (cell == 3)
            {
                time = Integer.valueOf(C3MbTime.getText());
                if ( pkg == 5 )
                {  
                    val = Integer.valueOf(C3MbP5.getText()) + 1;
                    time += 25;
                    C3MbP5.setText("" + val); C3MbTime.setText("" + time);  
                }
                else if ( pkg == 8 )
                {
                    val = Integer.valueOf(C3MbP8.getText()) + 1;
                    time += 20;
                    C3MbP8.setText("" + val); C3MbTime.setText("" + time);               
                }
            }
            else if ( cell == 4 )
            {
                time = Integer.valueOf(C4MbTime.getText());
                if ( pkg == 5 )
                {
                    val = Integer.valueOf(C4MbP5.getText()) + 1;
                    time += 25;
                    C4MbP5.setText("" + val); C4MbTime.setText("" + time);      
                }
                else if ( pkg == 8 )
                {
                    val = Integer.valueOf(C4MbP8.getText()) + 1;
                    time += 25;
                    C4MbP8.setText("" + val); C4MbTime.setText("" + time);                
                }
            }
        }
       
        else if ( machine == 'C' )
        {
            if ( cell == 1)
            {
                time = Integer.valueOf(C1McTime.getText());
                if ( pkg == 1)
                {
                    val = Integer.valueOf(C1McP1.getText()) + 1;
                    time += 25;
                    C1McP1.setText("" + val); C1McTime.setText("" + time);          
                }
                else if ( pkg == 3)
                {
                    val = Integer.valueOf(C1McP3.getText()) + 1;
                    time += 10;
                    C1McP3.setText("" + val); C1McTime.setText("" + time);         
                }
            }
        }
        else 
            System.out.println("Error!! gui.java addOneToMachines");
            
    }   
        
    /**
     *
     * @param num
     */
    public  void addOneToPusher(int num)
    {
        int val;
        if ( num == 1 )
        {
            val = Integer.valueOf(textFieldPusher1.getText()) + 1;
            textFieldPusher1.setText("" + val);
        }
        else if ( num == 2 )
        {
            val = Integer.valueOf(textFieldPusher2.getText()) + 1;
            textFieldPusher2.setText("" + val);
        }
        else
            System.out.println("Error!! gui.java addOneToPusher: " + num);
    }     
    
    public String getStatistics()
    {
        String content;
        content = "*STATISTICS*\r\n\tTransformations: \r\n";
                
        //transformations Ma
            content += "\t\t" + "\t"   + "#P1\t" + "#P2\t" + "#P6\t" + "Time(s)\r\n";
            content += "\t\t" + "C1\t" + C1MaP1.getText() + "\t" + C1MaP2.getText() + "\t" + C1MaP6.getText() + "\t" + C1MaTime.getText() + "\r\n";
            content += "\t\t" + "C2\t" + C2MaP1.getText() + "\t" + C2MaP2.getText() + "\t" + C2MaP6.getText() + "\t" + C2MaTime.getText() + "\r\n";
            content += "\t\t" + "C3\t" + C3MaP1.getText() + "\t" + C3MaP2.getText() + "\t" + C3MaP6.getText() + "\t" + C3MaTime.getText() + "\r\n";
            content += "\t\t" + "C4\t" + C4MaP1.getText() + "\t" + C4MaP2.getText() + "\t" + C4MaP6.getText() + "\t" + C4MaTime.getText() + "\r\n\r\n";

        //transformations Mb
            content += "\t\t" + "\t"   + "#P5\t" + "#P8\t" + "Time(s)\r\n";
            content += "\t\t" + "C2\t" + C2MbP5.getText() + "\t" + C2MbP8.getText() + "\t" + "\t" + C2MbTime.getText() + "\r\n";
            content += "\t\t" + "C3\t" + C3MbP5.getText() + "\t" + C3MbP8.getText() + "\t" + "\t" + C3MbTime.getText() + "\r\n";
            content += "\t\t" + "C4\t" + C4MbP5.getText() + "\t" + C4MbP8.getText() + "\t" + "\t" + C4MbTime.getText() + "\r\n\r\n";
        
        //transformations Mc
            content += "\t\t" + "\t"   + "#P1\t" + "#P3\t" + "#P8\t" + "Time(s)\r\n";
            content += "\t\t" + "C1\t" + C1McP1.getText() + "\t" + C1McP3.getText() + "\t" + C1McP8.getText() + "\t" + C1McTime.getText() + "\r\n\r\n\r\n";
            
        //pushers
            content += "\tPushers: \r\n";
            content += "\t\tPusher 1: " + textFieldPusher1.getText() + "\r\n";
            content += "\t\tPusher 2: " + textFieldPusher2.getText() + "\r\n\r\n\r\n";
            
        return content;
    }
}

